version: 2.1

orbs:
  node: circleci/node@4.7.0

jobs:
  build-and-test:
    parameters:
      node-version:
        type: string
        default: "15.10.0"
    docker:
      - image: cimg/node:<< parameters.node-version >>
    parallelism: 4
    steps:
      - checkout
      - node/install-packages
      - run:
          command: |
            npm run test-ci
    
  trigger-project-b-pipeline:
    docker: 
      - image: cimg/base:2021.11
    resource_class: small
    steps:
      - run:
          name: Ping another pipeline
          command: |
            CREATED_PIPELINE=$(curl --request POST \
              --url https://circleci.com/api/v2/project/gh/sftqa/circleback-cicd-project-b/pipeline \
              --header "Circle-Token: $CIRCLECI_API_KEY" \
              --header "content-type: application/json" \
              --data '{"branch":"main","parameters":{"triggering-pipeline-id":"<< pipeline.id >>"}}' \
            | jq -r '.id'
            )

            echo "my created pipeline"
            echo $CREATED_PIPELINE

            mkdir ~/workspace
            echo $CREATED_PIPELINE > pipeline.txt
      - persist_to_workspace:
          root: .
          paths: 
            - pipeline.txt  

  check-status-of-triggered-pipeline:
    docker: 
      - image: cimg/base:2021.11
    resource_class: small 
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: Check triggered workflow status
          command: |
            triggered_pipeline_id=$(cat workspace/pipeline.txt)

            created_workflow_status=$(curl --request GET \
                --url "https://circleci.com/api/v2/pipeline/${triggered_pipeline_id}/workflow" \
                --header "Circle-Token: $CIRCLECI_API_KEY" \
                --header "content-type: application/json" \
              | jq -r '.items[0].status'
            )

            echo $created_workflow_status

            if [[ "$created_workflow_status" != "success" ]]; then
              echo "Workflow not successful - ${created_workflow_status}"
              (exit -1) 
            fi
            
            echo "Created workflow successful"


workflows:
  node-test-and-deploy:
    jobs:
      - build-and-test
      - trigger-project-b-pipeline:
          context: 
            - circleci-api
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - wait-for-triggered-pipeline:
          type: approval
          requires: 
            - trigger-project-b-pipeline
      - check-status-of-triggered-pipeline:
          requires:
            - wait-for-triggered-pipeline
          context:
            - circleci-api
  


